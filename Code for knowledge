StringBuilder builder = new StringBuilder();
        builder.append("android : ").append(Build.VERSION.RELEASE);

        Field[] fields = Build.VERSION_CODES.class.getFields();
        for (Field field : fields) {
            String fieldName = field.getName();
            int fieldValue = -1;

            try {
                fieldValue = field.getInt(new Object());
            } catch (IllegalArgumentException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            } catch (NullPointerException e) {
                e.printStackTrace();
            }

            if (fieldValue == Build.VERSION.SDK_INT) {
                builder.append(" : ").append(fieldName).append(" : ");
                builder.append("sdk=").append(fieldValue);
            }
        }

        Log.d("LOG_TAG", "OS: " + builder.toString());



//Device Info

        StringBuffer infoBuffer = new StringBuffer();

        infoBuffer.append("-------------------------------------\n");
        infoBuffer.append("Model :" + Build.MODEL + "\n");//The end-user-visible name for the end product.
        infoBuffer.append("Device: " + Build.DEVICE + "\n");//The name of the industrial design.
        infoBuffer.append("Manufacturer: " + Build.MANUFACTURER + "\n");//The manufacturer of the product/hardware.
        infoBuffer.append("Board: " + Build.BOARD + "\n");//The name of the underlying board, like "goldfish".
        infoBuffer.append("Brand: " + Build.BRAND + "\n");//The consumer-visible brand with which the product/hardware will be associated, if any.
        infoBuffer.append("Serial: " + Build.SERIAL + "\n");
        infoBuffer.append("-------------------------------------\n");

        Log.d("TAG", "onCreate: "+infoBuffer);
        
        
        
        
        
        
        
//Device Deprecated Method
/* @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);


        if (requestCode == GlobalVariables.MOBILE_OTP_VERIFY) {
            boolean isVerified = false;
            try {
                if (data != null) {
                    isVerified = data.getBooleanExtra("OtpVerified", false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            if (resultCode == 11 && isVerified) {
                String mobileNumber = data.getStringExtra("mobileNumber");
                String deviceID = data.getStringExtra("deviceID");
                updateDevice(deviceID, mobileNumber);

            } else {
                uiUtils.showErrorCustomSnackBar(login_layout, "OTP verification failed", "Dismiss", Snackbar.LENGTH_LONG);
            }
        }

    }
