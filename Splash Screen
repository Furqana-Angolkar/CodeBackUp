//Splash Screen Migration
 //Splash Screen
   /* implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'*/


<!--
    <style name="Theme.MyApp" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:windowDisablePreview">true</item>&lt;!&ndash;This is to avoid Glimse screen after splash screen&ndash;&gt;
    </style>


    <style name="Theme.MySplash" parent="Theme.SplashScreen">
        <item name="windowSplashScreenBackground">@color/colorWhite</item>

       <item name="android:windowLightStatusBar" tools:targetApi="s">true</item>

        <item name="windowSplashScreenAnimatedIcon">@drawable/splash</item>

        <item name="windowSplashScreenAnimationDuration" tools:targetApi="s">10000</item>

        <item name="postSplashScreenTheme">@style/Theme.MyApp</item>
    </style>-->

 <activity
            android:name="Activity.Users.Splash"
            android:screenOrientation="fullSensor"
            android:configChanges="orientation|screenSize|keyboardHidden"
            android:theme="@style/SplashTheme"
            android:exported="true"
            tools:ignore="MissingClass">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        
        
        
        
        
        //splash.xml
        
        <?xml version="1.0" encoding="utf-8" ?>
<layer-list xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
            <solid android:color="@android:color/white" />
        </shape>
    </item>
    <item>

        <bitmap xmlns:android="http://schemas.android.com/apk/res/android"
            android:src="@drawable/applogo"
            android:gravity="center"
            tools:ignore="RedundantNamespace" />
    </item>

</layer-list>
        


//Api to check in Splash Screen

    private void checkDevice(String android_id,String mobile) {

        Retrofit retrofit=ApiClient.getAPI(sharedPrefManager.getBaseURL());

        ApiInterface api=retrofit.create(ApiInterface.class);

/*
        ApiInterface api = ApiClient.getRequestApi();
*/

        Call<User_parameters> call = api.login_user(mobile,android_id,"");

        call.enqueue(new Callback<User_parameters>() {
            @Override
            public void onResponse(@NonNull Call<User_parameters> call, @NonNull Response<User_parameters> response) {
                User_parameters responseList = response.body();

                switch (response.code()){
                    case 200:

                        if (responseList.getStatus().equalsIgnoreCase("Already logged in another device") ||
                                responseList.getStatus().equalsIgnoreCase("Incorrect device")) {

                            gotoLoginActivity();

                        }
                        else {

                            gotoImportActivity();
                        }
                        break;
                    case 500:
                        Toast.makeText(getApplicationContext(), "Error: Couldn't connect to server", Toast.LENGTH_SHORT).show();
                        break;
                    case 404:Toast.makeText(getApplicationContext(), "Server Data Not Found", Toast.LENGTH_SHORT).show();
                        break;
                    case 204:Toast.makeText(getApplicationContext(), "Data Not Found", Toast.LENGTH_SHORT).show();
                     break;
                    case 401:Toast.makeText(getApplicationContext(), "Unauthorized Data", Toast.LENGTH_SHORT).show();
                        break;
                    default:Toast.makeText(getApplicationContext(), "No Response from Server",Toast.LENGTH_SHORT).show();
                        break;
                }
            }

            @Override
            public void onFailure(@NonNull Call<User_parameters> call, @NonNull Throwable t) {

                gotoImportActivity();
            }
        });

    }
    
    
    
    build.gradle
    compileSdkVersion 31
     
     //splashscreen
     //
     <?xml version="1.0" encoding="utf-8"?>

<layer-list xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <item>
        <shape android:shape="rectangle">
<!--            <solid android:color="@android:color/white" />-->
        </shape>
    </item>
    <item>

        <bitmap xmlns:android="http://schemas.android.com/apk/res/android"
            android:src="@drawable/applogo"
            android:gravity="center"
            tools:ignore="RedundantNamespace" />
    </item>
</layer-list>
        
        
        
        
        
        
        
        
        
        
        
